#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&mt RCTRL Q  &kp W   &kp E           &kp R       &kp T                                                  &kp Y          &kp U               &kp I      &kp O    &trans
&kp A        &kp S   &mt LEFT_ALT D  &mt RWIN F  &kp G                    &kp LANG5        &trans       &kp H          &mt LEFT_CONTROL J  &kp K      &kp L    &kp P
&kp Z        &kp X   &kp C           &kp V       &kp B                    &trans           &trans       &kp N          &kp M               &kp COMMA  &kp DOT  &kp MINUS
&trans       &trans  &trans          &trans      &mt LEFT_SHIFT LEFT_WIN  &lt 2 SPACE      &lt 1 ENTER  &kp BACKSPACE                                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        layer1 {
            bindings = <
&kp AT_SIGN  &kp PAGE_UP  &kp PAGE_DOWN  &trans   &kp LEFT_BRACKET                         &kp RIGHT_BRACKET  &kp N7        &kp N8  &kp N9        &trans
&kp K_APP    &kp HOME     &kp END        &trans   &kp SEMICOLON     &trans         &trans  &kp COLON          &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N0
&kp F2       &kp F5       &kp F10        &kp F11  &kp F12           &trans         &trans  &kp SLASH          &kp N1        &kp N2  &kp N3        &kp LS(LCTRL)
&trans       &trans       &trans         &trans   &kp LANGUAGE_2    &kp LANG1      &trans  &kp DEL                                                &trans
            >;
        };

        layer2 {
            bindings = <
&kp ESC       &trans        &trans        &kp LG(R)  &trans                              &kp LA(F4)                &kp LS(LC(S))  &kp UP_ARROW  &trans      &trans
&bt BT_CLR    &trans        &trans        &kp TAB    &trans          &trans      &trans  &trans                    &kp LEFT       &kp DOWN      &kp RIGHT   &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans     &kp LG(X)       &trans      &trans  &kp LS(NON_US_BACKSLASH)  &trans         &kp LS(N8)    &kp LS(N9)  &trans
&trans        &trans        &trans        &trans     &kp LEFT_SHIFT  &trans      &trans  &kp DEL                                                            &trans
            >;
        };

        layer3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;

            sensor-bindings = <&inc_dec_kp 0 0>;
        };

        layer5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
