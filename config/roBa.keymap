#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define ZMK_POINTING_DEFAULT_SCRL_VAL 80

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        sample {
            bindings = <&kp LS(LC(F))>;
            key-positions = <24 23>;
            layers = <0>;
        };

        e {
            bindings = <&kp LS(LC(E))>;
            key-positions = <31 32>;
            layers = <0>;
        };

        h {
            bindings = <&kp H>;
            key-positions = <12 13>;
            layers = <0>;
        };

        b {
            bindings = <&kp B>;
            key-positions = <24 25>;
            layers = <0>;
        };

        y {
            bindings = <&kp Y>;
            key-positions = <18 19>;
            layers = <0>;
        };

        g {
            bindings = <&kp G>;
            key-positions = <30 31>;
            layers = <0>;
        };

        commbo {
            bindings = <&new_macro>;
            key-positions = <19 18>;
            layers = <1>;
        };

        slash {
            bindings = <&kp SLASH>;
            key-positions = <30 31>;
            layers = <1>;
        };

        semicorron {
            bindings = <&kp SEMICOLON>;
            key-positions = <13 12>;
            layers = <1>;
        };

        f7 {
            bindings = <&kp F7>;
            key-positions = <25 24>;
            layers = <1>;
        };

        exitmeeting {
            bindings = <&kp LS(LC(H))>;
            key-positions = <18 19>;
            layers = <2>;
        };

        underbar {
            bindings = <&underbar>;
            key-positions = <31 30>;
            layers = <2>;
        };

        kakko {
            bindings = <&macro_1>;
            key-positions = <13 12>;
            layers = <2>;
        };

        finishapp {
            bindings = <&kp LA(F4)>;
            key-positions = <25 24>;
            layers = <2>;
        };
    };

    macros {
        macro_1: to_layer_0 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp RIGHT_BRACKET &kp BACKSLASH &kp LEFT>;
            label = "TO_LAYER_0";
        };

        macro_2: macro_kakko {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_MUHENKAN &kp LS(N8) &kp LS(N9) &kp LEFT>;
            label = "MACRO_KAKKO";
        };

        macro_3: macro_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_MUHENKAN &kp LS(COMMA) &kp LS(PERIOD) &kp LEFT>;
            label = "MACRO_3";
        };

        new_macro: new_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp K &kp O &kp R &kp O &kp N &kp SPACE &kp ENTER &kp INT_MUHENKAN>;
            label = "NEW_MACRO";
        };

        underbar: underbar {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_HENKAN &kp A &kp N &kp N &kp D &kp A &kp MINUS &kp B &kp A &kp MINUS &kp SPACE &kp ENTER &kp INT_MUHENKAN>;
            label = "UNDERBAR";
        };

        atmark: atmark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp INT_MUHENKAN &kp LEFT_BRACKET>;
            label = "ATMARK";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&macro_1>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        encoder_msc_down_up: encoder_msc_down_up {
            compatible = "zmk,behavior-sensor-rotate";
            label = "ENCODER_MSC_DOWN_UP";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_UP>, <&msc SCRL_DOWN>;

            tap-ms = <20>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&trans           &kp W   &kp K           &kp COMMA   &trans                                               &trans         &kp X               &kp I  &kp O  &trans
&mt LCTRL MINUS  &kp S   &mt LEFT_ALT N  &mt RWIN T  &kp H                  &mkp MB1         &trans       &kp Y          &mt LEFT_CONTROL A  &kp E  &kp U  &kp P
&trans           &kp R   &kp F           &kp M       &kp B                  &trans           &trans       &kp G          &kp D               &kp C  &kp V  &lt 4 Z
&trans           &trans  &trans          &trans      &mt LEFT_SHIFT PERIOD  &lt 2 SPACE      &lt 1 ENTER  &kp BACKSPACE                                    &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        layer1 {
            bindings = <
&trans  &kp Q   &kp PAGE_DOWN  &kp LA(LS(F12))  &trans                                        &trans      &kp N7        &kp N8  &kp N9        &trans
&kp F2  &kp L   &kp J          &kp F12          &kp SEMICOLON     &bt BT_CLR_ALL      &trans  &new_macro  &kp NUMBER_4  &kp N5  &kp NUMBER_6  &kp N0
&trans  &kp F5  &kp F10        &kp F11          &kp F7            &trans              &trans  &kp SLASH   &kp N1        &kp N2  &kp N3        &kp TILDE
&trans  &trans  &trans         &trans           &kp INT_MUHENKAN  &kp INT_HENKAN      &trans  &kp PERIOD                                      &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        layer2 {
            bindings = <
&trans     &kp PAGE_UP  &kp LG(E)         &kp LG(L)  &trans                                &trans         &kp LS(LG(S))  &kp UP_ARROW  &kp LS(LC(O))  &trans
&kp LC(L)  &kp HOME     &mt LEFT_ALT END  &kp TAB    &macro_1    &bt BT_SEL 0      &trans  &kp LS(LC(H))  &kp LEFT       &kp DOWN      &kp RIGHT      &trans
&trans     &kp LG(R)    &kp ESC           &atmark    &kp LA(F4)  &trans            &trans  &underbar      &kp LS(LC(M))  &macro_2      &macro_3       &trans
&trans     &trans       &trans            &trans     &trans      &trans            &trans  &kp DEL                                                    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_BRI_UP C_BRI_DEC>;
        };

        layer3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                            &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &bt BT_SEL 1      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans  &mkp MB4  &trans    &mkp MB5  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans                                &trans
            >;

            sensor-bindings = <&encoder_msc_down_up>;
        };

        layer5 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };
    };
};
